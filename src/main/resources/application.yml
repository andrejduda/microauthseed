micronaut:
  application:
    name: microauthseed
  server:
    cors:
      enabled: true
      configurations:
        all:
            exposedHeaders:
                - Content-Type
                - Authorization
                - origin
                - accept
#          allowedOrigins:
#            - http://somepage.com
#            - https://somepage.com
            allowedMethods:
                - GET
                - POST
                - PUT
                - DELETE
                - OPTIONS
                - HEAD
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:secretsecretsecretsecretsecretsecretsecretsecret}"'
              jws-algorithm: HS256
        generator:
          access-token:
            ## expiration of JWT. Currently it is 50m
            expiration: 3000
          refresh-token:
            secret: '"${JWT_GENERATOR_REFRESH_SECRET:secretsecretsecretsecretsecretsecretsecretsecret}"'
            jws-algorithm: HS256
datasources:
  default:
    url: ${JDBC_URL:`jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE`}
    username: ${JDBC_USER:sa}
    password: ${JDBC_PASSWORD:""}
    driverClassName: ${JDBC_DRIVER:org.h2.Driver}
#    schema-generate: CREATE_DROP
#    dialect: H2

#    url: jdbc:postgresql://localhost:5432/databasename
#    driverClassName: org.postgresql.Driver
#    username: postgres
#    password: postgres
jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
#          auto: none
          show_sql: true

admin:
  pswd: '${ADMIN_PASSWORD:password}'